networks:
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1

volumes:
  traefik-certs_data:
  mqtt_data:
  node-red_data:

services:
  traefik:
    container_name: traefik
    image: traefik:latest
    restart: unless-stopped
    networks:
      - backend
    ports:
      # Public HTTP Port:
      - '80:80'
      # Public HTTPS Port:
      - '443:443'
      # MQTT
      - '8883:8883'
      - '8884:8884'
    environment:
      - HETZNER_API_KEY=${HETZNER_API_KEY}
      - TZ=Europe/Berlin
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik/config.yml:/etc/traefik/traefik.yml:ro"
      - "./traefik/dynamic:/etc/traefik/dynamic:ro"
      - "traefik-certs_data:/etc/traefik/certs"
      - "./traefik/authorized-users:/authorized-users:ro"

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: unless-stopped
    networks:
      - backend
    environment:
      - TZ=Europe/Berlin
      - WATCHTOWER_MONITOR_ONLY=true
      - WATCHTOWER_NOTIFICATION_URL=${WATCHTOWER_NOTIFICATION_URL}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto:latest
    restart: unless-stopped
    networks:
      - backend
    environment:
      TZ: Europe/Berlin
    ports:
      - "1883:1883"
    volumes:
      - ./mqtt-config:/mosquitto/config
      - mqtt_data:/mosquitto/data
    labels:
      - "traefik.enable=true"

      - "traefik.tcp.routers.mqtt-private.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mqtt-private.entrypoints=mqtt-private"
      - "traefik.tcp.routers.mqtt-private.tls=true"
      - "traefik.tcp.routers.mqtt-private.service=mqtt-private"
      - "traefik.tcp.services.mqtt-private.loadbalancer.server.port=8883"

      - "traefik.tcp.routers.mqtt-private-ws.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mqtt-private-ws.entrypoints=mqtt-private-ws"
      - "traefik.tcp.routers.mqtt-private-ws.tls=true"
      - "traefik.tcp.routers.mqtt-private-ws.service=mqtt-private-ws"
      - "traefik.tcp.services.mqtt-private-ws.loadbalancer.server.port=8884"

  node-red:
    container_name: node-red
    image: nodered/node-red
    restart: unless-stopped
    networks:
      - backend
    environment:
      NODE_RED_ENABLE_PROJECTS: true
      TZ: Europe/Berlin
    volumes:
      - node-red_data:/data
    user: node-red
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node-red.rule=Host(`flow.mzf.ffw-it.de`)"
      - "traefik.http.routers.node-red.entrypoints=websecure"
      - "traefik.http.routers.node-red.middlewares=authorized-users@file"
      - "traefik.http.routers.node-red.tls=true"
      - "traefik.http.services.node-red.loadbalancer.server.port=1880"

  web-monitor:
    container_name: web-monitor
    image: joseluisq/static-web-server:2
    restart: unless-stopped
    networks:
      - backend
    environment:
      TZ: Europe/Berlin
      SERVER_HOST: 0.0.0.0
      SERVER_CACHE_CONTROL_HEADERS: false
    volumes:
      - /opt/www-monitor:/public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.monitor-local.rule=Host(`monitor.mzf.ffw-it.de`) && ClientIP(`10.2.101.10`)"
      - "traefik.http.routers.monitor-local.entrypoints=websecure"
      - "traefik.http.routers.monitor-local.tls=true"

      - "traefik.http.routers.monitor-auth.rule=Host(`monitor.mzf.ffw-it.de`)"
      - "traefik.http.routers.monitor-auth.middlewares=authorized-users@file"
      - "traefik.http.routers.monitor-auth.entrypoints=websecure"
      - "traefik.http.routers.monitor-auth.tls=true"

      - "traefik.http.services.monitor.loadbalancer.server.port=80"